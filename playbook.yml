---
- hosts: localhost
  connection: local
  gather_facts: false
  user: root
  pre_tasks:
    - include_vars: variaveis.yml
  tasks:
    - name:               Criar VPC
      ec2_vpc_net:
        name:             "{{ vpc_name }}"
        cidr_block:       "{{ vpc_cidr_block }}"
        region:           "{{ aws_region }}"
        state:            "present"
      register: my_vpc

    
    - name: Criacao da rede publica 1.
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{ my_vpc.vpc.id }}"
        region: "{{ aws_region }}"
        cidr: "{{ subnet_cidr0 }}"
        az: "{{availability0 }}"
        map_public: yes
        resource_tags:
          Name: "{{ subnet_name }}"
      register: subnet    

    - name: Criacao da rede publica 2.
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{ my_vpc.vpc.id }}"
        region: "{{ aws_region }}"
        cidr: "{{ subnet_cidr1 }}"
        az: "{{availability1 }}"
        map_public: yes
        resource_tags:
          Name: "{{ subnet_name }}"
      register: subnet2            

    - name: Criacao da rede publica 3.
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{ my_vpc.vpc.id }}"
        region: "{{ aws_region }}"
        cidr: "{{ subnet_cidr2 }}"
        az: "{{availability2 }}"
        map_public: yes
        resource_tags:
          Name: "{{ subnet_name }}"
      register: subnet3      

    - name: Criacao da rede publica 4.
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{ my_vpc.vpc.id }}"
        region: "{{ aws_region }}"
        cidr: "{{ subnet_cidr3 }}"
        az: "{{availability3 }}"
        map_public: yes
        resource_tags:
          Name: "{{ subnet_name }}"
      register: subnet3      

    - name: Criacao da rede publica 5.
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{ my_vpc.vpc.id }}"
        region: "{{ aws_region }}"
        cidr: "{{ subnet_cidr4 }}"
        az: "{{availability4 }}"
        map_public: yes
        resource_tags:
          Name: "{{ subnet_name }}"
      register: subnet4      
    
    - name: Criacao do Internet Gateway
      ec2_vpc_igw:
        vpc_id: "{{ my_vpc.vpc.id }}"
        region: "{{ aws_region }}"
        state: present
      register: igw


    - name: Adicionando uma rota publica
      ec2_vpc_route_table:
        state: present
        vpc_id: "{{ my_vpc.vpc.id }}"
        region: "{{ aws_region }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
      register: public_route_table  


    - name: Criando banco de dados dynamo.
      dynamodb_table:
        state: present
        name: "{{ table_name }}"
        region: "{{ aws_region }}"
        hash_key_name: email
        hash_key_type: STRING
        range_key_type: NUMBER
        read_capacity:  1
        write_capacity: 1
        tags:
          tag_name: dynamodb


    - name: Criando ElasticBeanstalk
      elasticbeanstalk_app:
        app_name: "{{nomedoapk}}"
        description: "Cadastro de email"
        state: present      
      register: app

    - name: Criar a versao da aplicacao
      elasticbeanstalk_version:
        region: "{{aws_region}}"
        app_name: "{{nomedoapk}}"
        version_label: Programa tcbp
        s3_bucket: bucket do beanstalk
        s3_key: https://nomedos3-aws.s3.amazonaws.com/aplicacaocompactada.zip
        state: present
      register: version
    
    - name: Configuracoes da ElasticBeanstalk
      elasticbeanstalk_env:
        region: "{{aws_region}}"
        app_name: "{{nomedoapk}}"
        env_name: AWS_REGION
        version_label: Versao 1
        solution_stack_name: "64bit Amazon Linux 2 v3.2.2 running Python 3.7"
        option_settings:
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: AWS_REGION
          Value: AWS_REGION
      register: env